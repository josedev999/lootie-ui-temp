user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  20000;
}

http {
  port_in_redirect off;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

  # access_log  /var/log/nginx/access.log  main;

  client_header_timeout  3m;
  client_body_timeout    3m;
  send_timeout           3m;

  sendfile            on;

  upstream nodejs {
      server 127.0.0.1:7777;
  }

  server {
      listen 80;
      server_name lootie-ui;

      if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
          set $year $1;
          set $month $2;
          set $day $3;
          set $hour $4;
      }

      gzip on;
      gzip_comp_level 4;
      gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

      location / {
        #   auth_basic           "Development";
        #   auth_basic_user_file /etc/nginx/.htpasswd; 
          try_files $uri $uri @backend;
      }

      location @backend {
          proxy_pass http://nodejs;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_http_version 1.1;
          proxy_set_header X-NginX-Proxy true;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_hide_header X-Powered-By;
          proxy_cache_bypass $http_upgrade;
          proxy_redirect off;
          add_header X-Frame-Options "SAMEORIGIN" always;
          add_header X-Xss-Protection "1; mode=block" always;
          add_header X-Content-Type-Options "nosniff" always;
      }
  }
}
